Index: src/main/resources/spring/spring-app.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/spring/spring-app.xml	(date 1602102908636)
+++ src/main/resources/spring/spring-app.xml	(date 1602102908636)
@@ -0,0 +1,7 @@
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
+
+    <bean class="ru.javawebinar.topjava.repository.inmemory.InMemoryUserRepository" id="inmemoryUserRepository"/>
+
+</beans>
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/web/MealServlet.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/MealServlet.java	(revision 598707bfbab018f96280bb7eb401a43d6c65eb9b)
+++ src/main/java/ru/javawebinar/topjava/web/MealServlet.java	(date 1602102908629)
@@ -3,8 +3,8 @@
 import org.slf4j.Logger;
 import org.slf4j.LoggerFactory;
 import ru.javawebinar.topjava.model.Meal;
-import ru.javawebinar.topjava.repository.InMemoryMealRepository;
 import ru.javawebinar.topjava.repository.MealRepository;
+import ru.javawebinar.topjava.repository.inmemory.InMemoryMealRepository;
 import ru.javawebinar.topjava.util.MealsUtil;
 
 import javax.servlet.ServletConfig;
Index: src/main/java/ru/javawebinar/topjava/SpringMain.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/SpringMain.java	(date 1602102908633)
+++ src/main/java/ru/javawebinar/topjava/SpringMain.java	(date 1602102908633)
@@ -0,0 +1,19 @@
+package ru.javawebinar.topjava;
+
+import org.springframework.context.ConfigurableApplicationContext;
+import org.springframework.context.support.ClassPathXmlApplicationContext;
+import ru.javawebinar.topjava.repository.UserRepository;
+
+import java.util.Arrays;
+
+public class SpringMain {
+    public static void main(String[] args) {
+        ConfigurableApplicationContext appCtx = new ClassPathXmlApplicationContext("spring/spring-app.xml");
+        System.out.println("Bean definition names: " + Arrays.toString(appCtx.getBeanDefinitionNames()));
+
+//        UserRepository userRepository = (UserRepository) appCtx.getBean("inmemoryUserRepository");
+        UserRepository userRepository = appCtx.getBean(UserRepository.class);
+        userRepository.getAll();
+        appCtx.close();
+    }
+}
Index: src/main/java/ru/javawebinar/topjava/repository/inmemory/InMemoryUserRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/inmemory/InMemoryUserRepository.java	(date 1602102908624)
+++ src/main/java/ru/javawebinar/topjava/repository/inmemory/InMemoryUserRepository.java	(date 1602102908624)
@@ -0,0 +1,43 @@
+package ru.javawebinar.topjava.repository.inmemory;
+
+import org.slf4j.Logger;
+import org.slf4j.LoggerFactory;
+import ru.javawebinar.topjava.model.User;
+import ru.javawebinar.topjava.repository.UserRepository;
+
+import java.util.Collections;
+import java.util.List;
+
+public class InMemoryUserRepository implements UserRepository {
+    private static final Logger log = LoggerFactory.getLogger(InMemoryUserRepository.class);
+
+    @Override
+    public boolean delete(int id) {
+        log.info("delete {}", id);
+        return true;
+    }
+
+    @Override
+    public User save(User user) {
+        log.info("save {}", user);
+        return user;
+    }
+
+    @Override
+    public User get(int id) {
+        log.info("get {}", id);
+        return null;
+    }
+
+    @Override
+    public List<User> getAll() {
+        log.info("getAll");
+        return Collections.emptyList();
+    }
+
+    @Override
+    public User getByEmail(String email) {
+        log.info("getByEmail {}", email);
+        return null;
+    }
+}
Index: src/main/java/ru/javawebinar/topjava/repository/InMemoryMealRepository.java
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/InMemoryMealRepository.java	(revision 598707bfbab018f96280bb7eb401a43d6c65eb9b)
+++ src/main/java/ru/javawebinar/topjava/repository/inmemory/InMemoryMealRepository.java	(date 1602102908607)
@@ -1,6 +1,7 @@
-package ru.javawebinar.topjava.repository;
+package ru.javawebinar.topjava.repository.inmemory;
 
 import ru.javawebinar.topjava.model.Meal;
+import ru.javawebinar.topjava.repository.MealRepository;
 import ru.javawebinar.topjava.util.MealsUtil;
 
 import java.util.Collection;
